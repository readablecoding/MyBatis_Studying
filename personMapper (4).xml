<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<!-- 회원정보 처리 SQL -->
<mapper namespace="global.sesoc.person.dao.PersonMapper"> <!-- global.sesoc.person.dao.PersonMapper는 인터페이스로 이것과 매핑 -->

<!-- 회원 정보 저장 -->
<insert id="insertPerson" parameterType="person"> <!--id는  global.sesoc.person.dao.PersonMapper의 메소드와 이름이 같아야 함, parameterType은 클래스명과 맞아야 함-->
insert into person (
	num
	, name
	, age
)
values (
	person_seq.nextval
	, #{name}	<!--#이 넘어온 객체의 get.name() -->
	, #{age}	<!--#이 넘어온 객체의 get.age() -->
)	<!--세미클론(;)을 찍으면 안된다. -->
</insert>   <!--열고 닫는 것-->

<!-- 회원 정보 삭제 -->
<!-- parameter 타입으로 자주 사용하게 될 자료형: int, string, list, map -->
<delete id="deletePerson" parameterType="int"> <!--id는  인터페이스의 메소드와 이름이 같아야 함, parameterType은 전체경로-->
delete from person where num = #{num}	<!-- 여기서 #{num}는 그 값이 들어오는 것이다. int, string, list, map일 때는 get.num()이 아니다. -->
</delete> <!--완성된 것을 오라클에 전달-->

<!-- 회원 정보 수정 -->
<update id ="updatePerson" parameterType="person">
update person set age = #{age} where num = #{num} <!--get.age(), get.num()-->
</update>

<!-- 회원 1명의 정보 읽기 -->
<!--num은 primary key라 1명만 나온다.-->
<select id ="selectPerson" parameterType="int" resultType="person">  <!--resultType은 리턴타입. 쓸려면 기본생성자, set메서드가 있어야 한다. 내용이 없으면 null-->
select * from person where num = #{num} 							
</select>

<!-- 이름으로 검색하기 -->
<select id = "selectPersonByName" parameterType = "string" resultType ="person"> <!-- resultType은 한 행만 리턴함 -->
select * from person where name like '%' || #{name} || '%'
</select>

<!-- 모든 회원 보기 -->
<select id = "selectPersonAll" resultType ="person">
select * from person order by num
</select>
 
</mapper>
